
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-deployment
spec:
  selector:
    matchLabels:
      app: {{ .Values.client.labels.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.client.labels.app }}
    spec:
      initContainers:
        - name: wait-for-server
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              echo "Waiting for Server to be ready..."
              until nc -z server-service 80; do
                echo "Server not ready, waiting..."
                sleep 5
              done
              echo "Server is ready!"
      containers:
        - name: client
          image: "{{ .Values.client.image.repository }}:{{ .Values.client.image.tag }}"
          ports:
            - containerPort: {{ .Values.client.containerPort }}
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Name }}-client-config"
                  key: NODE_ENV
            - name: REACT_APP_API_URL
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Name }}-client-config"
                  key: REACT_APP_API_URL
            - name: API_BACKEND
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Name }}-client-config"
                  key: API_BACKEND
          resources:
            requests:
              cpu: {{ .Values.client.resources.requests.cpu }}
              memory: {{ .Values.client.resources.requests.memory }}
            limits:
              cpu: {{ .Values.client.resources.limits.cpu }}
              memory: {{ .Values.client.resources.limits.memory }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.client.containerPort }}
            initialDelaySeconds: {{ .Values.client.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.client.readinessProbe.periodSeconds }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.client.containerPort }}
            initialDelaySeconds: {{ .Values.client.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.client.livenessProbe.periodSeconds }}

      
